table X_IFR_EPIC6_TRAINING_SURVEY_UNPIVOT
	lineageTag: c7f252d5-08be-4ac3-911a-e20e9a1106f8

	column ITEM_ID
		dataType: string
		lineageTag: 28a6e97b-87e1-4420-b5cc-75ba82d7658e
		summarizeBy: none
		sourceColumn: ITEM_ID

		annotation SummarizationSetBy = Automatic

	column FROM_DATE
		dataType: dateTime
		formatString: Long Date
		lineageTag: c457968b-34a0-4d8b-9955-68bdd5b96719
		summarizeBy: none
		sourceColumn: FROM_DATE

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column TO_DATE
		dataType: dateTime
		formatString: Long Date
		lineageTag: 13a4e463-a32f-48cd-b184-bed1e9d7196a
		summarizeBy: none
		sourceColumn: TO_DATE

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column MEAN_SCORE
		dataType: double
		lineageTag: af971f62-c8f2-4af1-b21f-b673ef81f739
		summarizeBy: sum
		sourceColumn: MEAN_SCORE

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column ROWID
		dataType: string
		lineageTag: 1ca64c7a-2854-45df-b5b7-3d3ff46ab2c3
		summarizeBy: none
		sourceColumn: ROWID

		annotation SummarizationSetBy = Automatic

	column 'Year Month'
		dataType: string
		lineageTag: 4b4c872e-53ce-402c-ab03-94d39367ed93
		summarizeBy: none
		sourceColumn: Year Month

		annotation SummarizationSetBy = Automatic

	column Year
		dataType: int64
		formatString: 0
		lineageTag: b9c7c39a-36db-4ff0-9b39-9e62b6fc22d3
		summarizeBy: sum
		sourceColumn: Year

		annotation SummarizationSetBy = Automatic

	column Month
		dataType: int64
		formatString: 0
		lineageTag: ddb63e74-87cf-4874-8231-c9b9c06addc9
		summarizeBy: sum
		sourceColumn: Month

		annotation SummarizationSetBy = Automatic

	column Quarter
		dataType: string
		lineageTag: 3a3e16fb-f5ea-4432-a9a9-0f82095b4541
		summarizeBy: none
		sourceColumn: Quarter

		annotation SummarizationSetBy = Automatic

	column ITEM_TITLE_SHORT
		dataType: string
		lineageTag: fe9e85ab-77f0-4888-a09a-35a57e8d397e
		summarizeBy: none
		sourceColumn: ITEM_TITLE_SHORT

		annotation SummarizationSetBy = Automatic

	column ITEM_MEAN_SCORE
		dataType: double
		lineageTag: 23457ee8-c9b1-4c3c-b7b1-b7d0f70637b2
		summarizeBy: sum
		sourceColumn: ITEM_MEAN_SCORE

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	partition X_IFR_EPIC6_TRAINING_SURVEY_UNPIVOT = m
		mode: import
		source = ```
				let NumberOfRow = if RowLimit > 0 then " FETCH FIRST " & Number.ToText(RowLimit) & " ROWS ONLY" else "",
				    Source = Oracle.Database(ServerName, [HierarchicalNavigation=true, 
				    Query= "SELECT DISTINCT
				    EXPORT_DATE,
				    ITEM_ID,
				    ITEM_TITLE,
				    ACTIVE_SURVEY,
				    FROM_DATE,
				    TO_DATE,
				    MEAN_SCORE,
				    COMPLETED_SURVEYS,
				    TOTAL_SURVEYS,
				    ITEM_TYPE_ID,
				    ITEM_MEAN_SCORE,
				    COMPLETED_ITEMS,
				    TOTAL_ITEMS
				FROM
				    MARD_PCMS.X_IFR_TRAINM_ACE_EPIC6_TRAINING_SURVEY" & NumberOfRow]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"FROM_DATE", type date}, {"TO_DATE", type date}, {"EXPORT_DATE", type date}}),
				    #"Added Custom Column" = Table.AddColumn(#"Changed Type", "Year Month", each Text.Combine({Date.ToText([FROM_DATE], "yyyy"), Date.ToText([FROM_DATE], "MM")}), type text),
				    #"Added Custom" = Table.AddColumn(#"Added Custom Column", "Year Month 2", 
				                    each if Date.ToText([FROM_DATE], "yyyy") = Date.ToText([TO_DATE], "yyyy") and Date.ToText([FROM_DATE], "MM") = Date.ToText([TO_DATE], "MM")
				                        then Text.Combine({Date.ToText([FROM_DATE], "MM"),"." , Date.ToText([FROM_DATE], "yyyy")}) 
				                            else if [TO_DATE] = null 
				                                then Text.Combine({Date.ToText([FROM_DATE], "MM"),"." , Date.ToText([FROM_DATE], "yyyy")})
				                                    else if [FROM_DATE] = null 
				                                    then null else Text.Combine({Date.ToText([FROM_DATE], "MM"),"." , Date.ToText([FROM_DATE], "yyyy")," - ", Date.ToText([TO_DATE], "MM"),"." , Date.ToText([TO_DATE], "yyyy")}), type text),
				    #"Added Custom Column1" = Table.AddColumn(#"Added Custom", "ROWID", each Text.Combine({Date.ToText([FROM_DATE], "yyyy"), Date.ToText([FROM_DATE], "MM"),
				    Date.ToText([TO_DATE], "yyyy"), Date.ToText([TO_DATE], "MM"), [ITEM_ID], Number.ToText([TOTAL_ITEMS])}), type text),
				    #"Inserted Text Before Delimiter" = Table.AddColumn(#"Added Custom Column1", "Text Before Delimiter", each Text.BeforeDelimiter([Year Month 2], " -"), type text),
				    #"Renamed Columns1" = Table.RenameColumns(#"Inserted Text Before Delimiter",{{"Text Before Delimiter", "From Date"}}),
				    #"Inserted Text After Delimiter" = Table.AddColumn(#"Renamed Columns1", "Text After Delimiter", each Text.AfterDelimiter([Year Month 2], "- "), type text),
				    #"Renamed Columns2" = Table.RenameColumns(#"Inserted Text After Delimiter",{{"Text After Delimiter", "To Date"}}),
				    #"Inserted Text Between Delimiters" = Table.AddColumn(#"Renamed Columns2", "Text Between Delimiters", each Text.BetweenDelimiters([ITEM_TITLE], "[", "]"), type text),
				    #"Added Prefix" = Table.TransformColumns(#"Inserted Text Between Delimiters", {{"Text Between Delimiters", each "[" & _, type text}}),
				    #"Added Suffix" = Table.TransformColumns(#"Added Prefix", {{"Text Between Delimiters", each _ & "]", type text}}),
				    #"Renamed Columns5" = Table.RenameColumns(#"Added Suffix",{{"Text Between Delimiters", "ITEM_TITLE_SHORT"}}),
				    #"Unpivoted Other Columns" = Table.UnpivotOtherColumns(#"Renamed Columns5", {"ROWID", "ITEM_ID", "FROM_DATE", "TO_DATE", "MEAN_SCORE","ITEM_MEAN_SCORE", "ITEM_TITLE_SHORT"}, "Attribute", "Value"),
				    #"Filtered Rows" = Table.SelectRows(#"Unpivoted Other Columns", each ([Attribute] = "From Date" or [Attribute] = "To Date")),
				    #"Filtered Rows1" = Table.SelectRows(#"Filtered Rows", each [Value] <> null and [Value] <> ""),
				    #"Removed Columns" = Table.RemoveColumns(#"Filtered Rows1",{"Attribute"}),
				    #"Renamed Columns" = Table.RenameColumns(#"Removed Columns",{{"Value", "Year Month"}}),
				    #"Inserted Text After Delimiter1" = Table.AddColumn(#"Renamed Columns", "Text After Delimiter", each Text.AfterDelimiter([Year Month], "."), type text),
				    #"Renamed Columns3" = Table.RenameColumns(#"Inserted Text After Delimiter1",{{"Text After Delimiter", "Year"}}),
				    #"Inserted Text Before Delimiter1" = Table.AddColumn(#"Renamed Columns3", "Text Before Delimiter", each Text.BeforeDelimiter([Year Month], "."), type text),
				    #"Changed Type1" = Table.TransformColumnTypes(#"Inserted Text Before Delimiter1",{{"Text Before Delimiter", Int64.Type}}),
				    #"Renamed Columns4" = Table.RenameColumns(#"Changed Type1",{{"Text Before Delimiter", "Month"}}),
				    #"Changed Type2" = Table.TransformColumnTypes(#"Renamed Columns4",{{"Year", Int64.Type}}),
				    #"Added Custom1" = Table.AddColumn(#"Changed Type2", "Quarter", each "Q" & Text.From(Number.RoundUp([Month] / 3)) & "-" & Text.From([Year]))
				in
				    #"Added Custom1"
				```

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

