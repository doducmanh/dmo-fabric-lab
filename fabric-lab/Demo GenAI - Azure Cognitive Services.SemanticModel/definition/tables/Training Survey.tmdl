table 'Training Survey'
	excludeFromModelRefresh
	lineageTag: 476301c5-c2b5-4849-ad1b-6d5c788ad199

	column ID
		dataType: int64
		formatString: 0
		lineageTag: dcb643b1-3f4a-4be5-9783-0c21972c761f
		summarizeBy: count
		sourceColumn: ID

		annotation SummarizationSetBy = Automatic

	column 'Item Title'
		dataType: string
		lineageTag: 0a9baf96-66cc-4c09-883e-5a622bf3b588
		summarizeBy: none
		sourceColumn: Item Title

		annotation SummarizationSetBy = Automatic

	column Answer
		dataType: string
		lineageTag: 18972d10-4993-40e9-b5d5-a300ba302d17
		summarizeBy: none
		sourceColumn: Answer

		annotation SummarizationSetBy = Automatic

	column 'Detect language.Detected Language Name'
		dataType: string
		lineageTag: bc41c433-8fb4-4bc9-84fd-19ade1d9b435
		summarizeBy: none
		sourceColumn: Detect language.Detected Language Name

		annotation SummarizationSetBy = Automatic

	column 'Detect language.Detected Language ISO Code'
		dataType: string
		lineageTag: 822b95ad-3e44-40c7-a3f3-dec04934589d
		summarizeBy: none
		sourceColumn: Detect language.Detected Language ISO Code

		annotation SummarizationSetBy = Automatic

	column 'Extract key phrases'
		dataType: string
		lineageTag: 73256c09-f805-474c-9727-71c446a4bfe8
		summarizeBy: none
		sourceColumn: Extract key phrases

		annotation SummarizationSetBy = Automatic

	column 'Extract key phrases.KeyPhrase'
		dataType: string
		lineageTag: 89f4fd80-727e-409a-92be-475b9fb238b6
		summarizeBy: none
		sourceColumn: Extract key phrases.KeyPhrase

		annotation SummarizationSetBy = Automatic

	partition 'Training Survey' = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("pVjLbhxFFP2Vi5dobCWxHWBpKyayQgKWo0QiZFEzfaenMtVVQz1mMl6lrQgID7EIBPGQgoUlBFGCWBAJgWAxzpc0islfcKqrDURiVVhezPRUn1uPe849t65dWzq91Fu6tnNxeWdTODlwy5vLVzcvX6ed5fSdhsaSHzFdESow7XrLolrexEtjlpoumIq1F3bpeu/a0plcqMt46K2QWuqyR4AtWbMVqkcz4cgJL91QDLyx85U20GpuoOPbB039WYuxlouxE4SSfk6V1IVjT1NHE4vZyQGT81IpUmIwThNdzw1y82b7/tnc97F9rHgqtNeLhy3US7lQjkeWyuBJKMUORzNWYjLxLejLuaCv46mdScdkuq16JRdqm0ZiyqQNiaKQ3mihaNCmpUvIp0/lQs/MrIdfpCP8W347SMsFeUPDeMwm+JWVFXLMdHVj9/JWjBrDkuibKXexs+lVGlNQxX5kioSUza7l//pLmNlE0un9bBKdE3RjcTiySg7w8+5gFFSI3HdGKc+aComne6yFlcaRCIMRVTjXkheHumDraca2YP1CmkY2zbZ9PFlBfj6RgzZvgkVO+pHwVAXnqY8vYowJzVlYEkPPtv3YnW42P69IBpuweKxkcWiZwCzo3pthHPQQsRePy7g1PcIi6UKwe8Q+auFeoPHiV4ud6WaQTettUnIcsxk/zsScXOjf4IFvFRf8tkbgZLrUy6b5CJphEkY2v99I4orTeSucOnXmLA2Ei0obCmiwwdbhBGesIuWLtClnsgl/5ckBlETQk4OxUQzppP5cGQSz4egjvfgOqTJ58jk7fOxCZfN7kyW9KpQbjCDSMxNTOiClSbdJUbAX0BgZU73PpV38irRPmnsmWwjOLx4ju5F3lhbfmjEJrcST+0c/qqMfLSIe3ZcqRciWhVL2fVqBS0jZArHS/iWQbHpfDKgH1DdVwslm6/Gdn5v6QVN/D/PQ3NpPaNnMe3rv3eMHXzf1o2f37j6rP23q95r6w6beb/Y/wMOm/ra5Vf/x+6OnD7+J4er7Tf1LU7+DMX/e+aGpb6fo2ZQ8WQvCvd/UvzX1l83+3b8X9T+qcJITnrKdo2TqMjm1bCo+V6hWs2l2LljYR6OjSqB+eyZldNnZyGwmQa1nwkKadbAQ60OtUyF7VZYBjxN6NotGog/oIXQeBkBqpg3bZxlrnpYlGdQ/iuYbYy4Fv3cSLptql8wKbSgYjVCOSLYVURsPv6OET3anmtMN0+9RHy5wIDQp2N6KqYRjbyHH2swUFyVH64Mxp9d2elCXgkZmFhEhb53LW83mMjy3V0wB2h/HpCklzGxeKxG886i/Y05I2ZyG+5TOBU6yt5rNzqdf3Tr+af/4i9sQm+OHn3TasP9xU3/Q7N9pFSgJwGo2U7dcZzlmKCooP6zdLJYZUdEWikzKu+i/hjxCqRjB9KAExSEcnVnnyvAppWYYqsVjB/MWvUmfx60H7lGoqBBWhNayAEZ3abqWLQiaT0pvj/bEdHFQHH15Y/Fw0PU3a9kSsa3h6tg51GEmtKKYP6buPCpl6GRsLVspdrnqupHFQfSyCS5bGrYwLbTK2HoRMQ3KNnofB0WoMH1ZGEI8SLBbfGPIQJU09wi+pRLR5xZoYQTGCNI8wIplgUdpRtnq8VpysTGmj+a8FUJL2xrez+OkkAiXWSq0y542pYJ4IXPsWCEFk59Zy5aEjdSQQnCeB8zWg3Pwvle5j821Ud/jnYR2E4HMR1cXoGcapniKFmVP8qiPAUWw6EwiWbbSDJAwHK8vnMfq2SfRW8uWlYicNi0BZetK7N1JJiu+li0d/cDaoFviajddb2ST+XxAHl+RLt6lOLjcqB9xg8dodbhLHhd3+vmdTVGzmQ4yVrK7mclmdBmn/s+kElo2oS8ZmsqCO2FYz6bhv2621rMJNREOPS9qQkqU9WwitddFYVhyHxU2YWVzwJtJ/B12i07utJK5iKPTBUl7PxMvTFKobJacj3cuCu29PvGv6/mGWKdkRsVcHEaXhnro2vIiolhCDlFg0t6czabRi+n9bEJc2EgA+Te3/ypFVdttyWqCZjbW0kS0s9nUaE8j3cgkpGxytEgnF8zR0FqeSp61g+FVqX0/xfg/V0nx6iS2PyjKqMZFjDU3gRyctSpI6oEK8Fct3dsEdvAFBh6qnZBICe35Zqwa1/8C", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [ID = _t, #"Item Title" = _t, Answer = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"ID", Int64.Type}, {"Item Title", type text}, {"Answer", type text}}),
				    #"Applied Detect language" = AIFunctions.PostProcess(Table.AddColumn(#"Changed Type", "Detect language", each #"Detect language"([Answer])), "Detect language", "CognitiveServices.DetectLanguagetext") meta [FunctionBrowser="TextAnalytics"],
				    #"Applied Extract key phrases" = AIFunctions.PostProcess(Table.AddColumn(#"Applied Detect language", "Extract key phrases", each #"Extract key phrases"([Answer], [Detect language.Detected Language ISO Code])), "Extract key phrases", "CognitiveServices.ExtractKeyPhrasestexttext") meta [FunctionBrowser="TextAnalytics"]
				in
				    #"Applied Extract key phrases"

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

