table 'Refresh Date and Time'
	lineageTag: 33e9857a-f00d-4b0b-a1d6-3427f9c33a4b

	column 'Last Refresh'
		dataType: dateTime
		formatString: General Date
		lineageTag: 3076c5e2-5844-4673-b983-c6f10b1bc0e3
		summarizeBy: none
		sourceColumn: Last Refresh

		annotation SummarizationSetBy = Automatic

	column Date
		dataType: dateTime
		formatString: Long Date
		lineageTag: e9e8ee5d-8be4-4f3d-ba13-f21da2ef6014
		summarizeBy: none
		sourceColumn: Date

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column Time
		dataType: dateTime
		formatString: Long Time
		lineageTag: a72ba10c-d5ad-48d9-9624-65fed9454efa
		summarizeBy: none
		sourceColumn: Time

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Time

	partition 'Refresh Date and Time-232a926f-7d51-42b1-b365-a06472f22ebe' = m
		mode: import
		queryGroup: 'Data Model'
		source =
				let
				  Source = DateTime.FixedLocalNow(),
				  #"Converted to Table" = #table(1, {{Source}}),
				  #"Renamed Columns" = Table.RenameColumns(#"Converted to Table", {{"Column1", "Last Refresh"}}),
				  #"Changed Type" = Table.TransformColumnTypes(#"Renamed Columns", {{"Last Refresh", type datetime}}),
				  #"Inserted Date" = Table.AddColumn(#"Changed Type", "Date", each DateTime.Date([Last Refresh]), type date),
				  #"Insert Time" = Table.AddColumn(#"Inserted Date", "Time", each DateTime.Time([Last Refresh]), type time)
				in
				  #"Insert Time"

	annotation PBI_ResultType = Table

